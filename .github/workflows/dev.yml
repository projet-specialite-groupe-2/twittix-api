name: CI/CD Twittix API

on:
  push:
    branches:
      - develop
      - feature/ci-cd/#17

jobs:
  test:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y  

      - name: Build Docker Compose services
        run: docker-compose build  

      - name: Run Docker Compose services
        run: docker-compose up -d

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, opcache, bcmath

      # - name: Install Composer dependencies
      #   run: |
      #     curl -sS https://getcomposer.org/installer | php
      #     php composer.phar install

      # - name: Save Composer artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: vendor
      #     path: vendor/- name: Checkout repository
      
      - name: Run quality checks
        run: |
          docker compose exec php sh -c "
            composer install && \
            php ./vendor/bin/rector process src --dry-run --verbose && \
            php ./vendor/bin/php-cs-fixer fix --verbose --show-progress=dots && \
            php ./vendor/bin/psalm && \
            php ./bin/console doctrine:database:create --if-not-exists --env=test && \
            php ./bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration --env=test && \
            php ./bin/console doctrine:schema:validate --env=test && \
            php ./bin/console doctrine:fixtures:load --no-interaction --append && \
            php ./bin/phpunit
          "    

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deploy via SSH
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          # Param√®tres pour la connexion SSH
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.DEV_SERVER_IP }}
          REMOTE_USER: ${{ secrets.DEV_HOST }}
          TARGET: ./dev/api/
          SCRIPT_AFTER: |
            cd ./dev/api/ 
            docker compose up -d --build